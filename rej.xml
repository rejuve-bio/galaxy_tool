<tool id="rej" name="Rejuve" version="0.1.0+galaxy0" python_template_version="3.5" profile="21.05">

    <requirements>
    </requirements>

    <stdio>
        <exit_code range=":-2" level="warning" description="Low disk space" />
        <exit_code range="1:" level="fatal"  />
        <regex match="Error:"  level="fatal" />
    </stdio>

    <command detect_errors="exit_code"><![CDATA[

    python3 '$__tool_directory__/service.py'
    #if $service.select == 'as'
        -query $service.template 
        #if $service.output_type == "json" 
            -viz
        #end if
    #elif $service.select == 'hg'
        -hg $service.param1 $service.param2
    #elif $service.select == 'nl'
        -prompt $service.prompt
    #end if

    ## #if $service.select == 'nl'
        > '$output'
    ## #else
    ##     >'output'
    ## #end if

    ]]></command>

    <inputs>

        <conditional name="service">

            <param type="select" name="select" label="Service">
                    <option value="as">Query Builder</option>
                    <option value="nl">Prompt</option>
                    <option value="hg">Hypothesis</option>
            </param>

            <when value="nl">
                <param type="text" format="data" name="prompt" label="Enter your prompt" />
            </when>

            <when value="as">

                <param type="select" name="template" label="Pick a template">
                        <!-- <option value="viz">Use a visualizer</option> -->
                        <option value='gwas'>Find all GWAS variants of a gene that are located in enhancers and identify the associated genes of these enhancers</option>
                        <option value='gtp'>Find a gene, its transcript, and the associated protein, establishing relationships of transcription and translation.</option>
                        <option value='pctp'>Find a protein-coding gene, its transcript, and the associated protein (ANKE1), establishing a transcription relationship from the gene to the transcript.</option>
                </param>

                <param type="select" name="output_type" label="Select output type">
                    <option value="tab">Get tabular output</option>
                    <option value="json">Viszualize</option>

                </param>
        
            </when>

            <when value="hg">

                <param optional="false" type="text" name="param1" label="SNV or Indel"/>
                <param optional="false" type="text" name="param2" label="Phenotype/ Triat"/>

                <param name="tabular" checked="true" truevalue="true" falsevalue="false" type="boolean" label="Get tabular output"/>

            </when>

        </conditional> 

    </inputs>

    <outputs>

        <data name="output" format="txt" label="${tool.name} | service: ${service['select']} ">
            <!-- <filter>service['select'] == "nl"</filter> -->
            <change_format>
                <when input="output_type" value="tab" format="tabular"/>
            </change_format>
            <change_format>
                <when input="output_type" value="json" format="json"/>
            </change_format>
        </data>

        <!-- <data name="output" format="json" label="${tool.name} | service: ${service['select']} | json or table">
            <filter>service['select'] != "nl"</filter>
            <change_format>
                <when input="tabular" value="tabular" format="tabular"/>
            </change_format>
        </data> -->

    </outputs>


    <tests>
        <test expect_num_outputs="1">
            <!--TODO: auto-generated test case. Please fill in the required values-->
            <conditional name="service">
                <param name="select" value="as"/>
                <param name="template" value="viz"/>
                <param name="viz" value="true"/>
                <param name="tabular" value="true"/>
            </conditional>
            <output name="output">
                <assert_contents>
                    <has_text text=""/>
                    <has_line line=""/>
                    <has_line_matching expression=""/>
                </assert_contents>
            </output>
            <output name="output">
                <assert_contents>
                    <has_text text=""/>
                    <has_line line=""/>
                    <has_line_matching expression=""/>
                </assert_contents>
            </output>
        </test>
    
        <test expect_num_outputs="1">
            <!--TODO: auto-generated test case. Please fill in the required values-->
            <conditional name="service">
                <param name="select" value="nl"/>
                <param name="prompt" value=""/>
            </conditional>
            <output name="output">
                <assert_contents>
                    <has_text text=""/>
                    <has_line line=""/>
                    <has_line_matching expression=""/>
                </assert_contents>
            </output>
            <output name="output">
                <assert_contents>
                    <has_text text=""/>
                    <has_line line=""/>
                    <has_line_matching expression=""/>
                </assert_contents>
            </output>
        </test>
    
        <test expect_num_outputs="1">
            <!--TODO: auto-generated test case. Please fill in the required values-->
            <conditional name="service">
                <param name="select" value="hg"/>
                <param name="param1" value=""/>
                <param name="param2" value=""/>
                <param name="tabular" value="true"/>
            </conditional>
            <output name="output">
                <assert_contents>
                    <has_text text=""/>
                    <has_line line=""/>
                    <has_line_matching expression=""/>
                </assert_contents>
            </output>
            <output name="output">
                <assert_contents>
                    <has_text text=""/>
                    <has_line line=""/>
                    <has_line_matching expression=""/>
                </assert_contents>
            </output>
        </test>
    
    </tests>

    <help><![CDATA[
    TODO: Fill in help.
    ]]></help>
</tool>